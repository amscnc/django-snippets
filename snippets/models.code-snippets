{
        "Django Model Class": {
            "prefix": "class:model",
            "body": [
            "class ${1:ModelName}(models.Model):",
            "    ${2:field_name} = models.${3|CharField,TextField,BooleanField,IntegerField,BigIntegerField,SmallIntegerField,PositiveIntegerField,PositiveSmallIntegerField,FloatField,DecimalField,DateField,TimeField,DateTimeField,DurationField,FileField,ImageField,ForeignKey,OneToOneField,ManyToManyField,SlugField,UUIDField,JSONField,EmailField,URLField,IPAddressField,GenericIPAddressField|}(${4|null,blank,default,choices,unique,primarykey,ondelete|})",
            "",
            "    def __str__(self):",
            "        return self.${2:field_name}"
            ],
            "description": "Django model class"
        },
        "Django Model Field": {
            "prefix": "models",
            "body": [
                "${1:field_name} = models.${2|CharField,TextField,BooleanField,IntegerField,BigIntegerField,SmallIntegerField,PositiveIntegerField,PositiveSmallIntegerField,FloatField,DecimalField,DateField,TimeField,DateTimeField,DurationField,FileField,ImageField,ForeignKey,OneToOneField,ManyToManyField,SlugField,UUIDField,JSONField,EmailField,URLField,IPAddressField,GenericIPAddressField|}(${3|null,blank,default,choices,unique,primarykey,ondelete|})"
            ],
            "description": "Django model field"
        },
        "CharField": {
            "prefix": "CharField",
            "body": "models.CharField(max_length=${1:100}${2:, blank=${3:True}, null=${4:True}})",
            "description": "Django CharField"
        },
        "TextField": {
        "prefix": "TextField",
        "body": "models.TextField(${1:blank=${2:True}, null=${3:True}})",
        "description": "Django TextField"
        },
        "BooleanField": {
        "prefix": "BooleanField",
        "body": "models.BooleanField(default=${1:False})",
        "description": "Django BooleanField"
        },
        "IntegerField": {
        "prefix": "IntegerField",
        "body": "models.IntegerField(${1:blank=${2:True}, null=${3:True}, default=${4:0}})",
        "description": "Django IntegerField"
        },
        "BigIntegerField": {
        "prefix": "BigIntegerField",
        "body": "models.BigIntegerField(${1:blank=${2:True}, null=${3:True}, default=${4:0}})",
        "description": "Django BigIntegerField"
        },
        "SmallIntegerField": {
        "prefix": "SmallIntegerField",
        "body": "models.SmallIntegerField(${1:blank=${2:True}, null=${3:True}, default=${4:0}})",
        "description": "Django SmallIntegerField"
        },
        "PositiveIntegerField": {
        "prefix": "PositiveIntegerField",
        "body": "models.PositiveIntegerField(${1:blank=${2:True}, null=${3:True}, default=${4:0}})",
        "description": "Django PositiveIntegerField"
        },
        "PositiveSmallIntegerField": {
        "prefix": "PositiveSmallIntegerField",
        "body": "models.PositiveSmallIntegerField(${1:blank=${2:True}, null=${3:True}, default=${4:0}})",
        "description": "Django PositiveSmallIntegerField"
        },
        "FloatField": {
        "prefix": "FloatField",
        "body": "models.FloatField(${1:blank=${2:True}, null=${3:True}, default=${4:0.0}})",
        "description": "Django FloatField"
        },
        "DecimalField": {
        "prefix": "DecimalField",
        "body": "models.DecimalField(max_digits=${1:10}, decimal_places=${2:2}${3:, blank=${4:True}, null=${5:True}})",
        "description": "Django DecimalField"
        },
        "DateField": {
        "prefix": "DateField",
        "body": "models.DateField(${1:blank=${2:True}, null=${3:True}, auto_now=${4:False}, auto_now_add=${5:False}})",
        "description": "Django DateField"
        },
        "TimeField": {
        "prefix": "TimeField",
        "body": "models.TimeField(${1:blank=${2:True}, null=${3:True}, auto_now=${4:False}, auto_now_add=${5:False}})",
        "description": "Django TimeField"
        },
        "DateTimeField": {
        "prefix": "DateTimeField",
        "body": "models.DateTimeField(${1:blank=${2:True}, null=${3:True}, auto_now=${4:False}, auto_now_add=${5:False}})",
        "description": "Django DateTimeField"
        },
        "DurationField": {
        "prefix": "DurationField",
        "body": "models.DurationField(${1:blank=${2:True}, null=${3:True}})",
        "description": "Django DurationField"
        },
        "FileField": {
        "prefix": "FileField",
        "body": "models.FileField(upload_to='${1:uploads/}'${2:, blank=${3:True}, null=${4:True}})",
        "description": "Django FileField"
        },
        "ImageField": {
        "prefix": "ImageField",
        "body": "models.ImageField(upload_to='${1:images/}'${2:, blank=${3:True}, null=${4:True}})",
        "description": "Django ImageField"
        },
        "ForeignKey": {
        "prefix": "ForeignKey",
        "body": "models.ForeignKey(${1:ModelName}, on_delete=${2:models.CASCADE}${3:, blank=${4:True}, null=${5:True}})",
        "description": "Django ForeignKey"
        },
        "OneToOneField": {
        "prefix": "OneToOneField",
        "body": "models.OneToOneField(${1:ModelName}, on_delete=${2:models.CASCADE}${3:, blank=${4:True}, null=${5:True}})",
        "description": "Django OneToOneField"
        },
        "ManyToManyField": {
        "prefix": "ManyToManyField",
        "body": "models.ManyToManyField(${1:ModelName}${2:, blank=${3:True}, related_name='${4:related_name}'}",
        "description": "Django ManyToManyField"
        },
        "SlugField": {
        "prefix": "SlugField",
        "body": "models.SlugField(${1:max_length=${2:50}, blank=${3:True}, null=${4:True}})",
        "description": "Django SlugField"
        },
        "UUIDField": {
        "prefix": "UUIDField",
        "body": "models.UUIDField(${1:blank=${2:True}, null=${3:True}, default=${4:uuid.uuid4}})",
        "description": "Django UUIDField"
        },
        "JSONField": {
        "prefix": "JSONField",
        "body": "models.JSONField(${1:blank=${2:True}, null=${3:True}, default=${4:dict}})",
        "description": "Django JSONField"
        },
        "EmailField": {
        "prefix": "EmailField",
        "body": "models.EmailField(${1:max_length=${2:100}, blank=${3:True}, null=${4:True}})",
        "description": "Django EmailField"
        },
        "URLField": {
        "prefix": "URLField",
        "body": "models.URLField(${1:max_length=${2:200}, blank=${3:True}, null=${4:True}})",
        "description": "Django URLField"
        },
        "IPAddressField": {
        "prefix": "IPAddressField",
        "body": "models.IPAddressField(${1:blank=${2:True}, null=${3:True}})",
        "description": "Django IPAddressField"
        },
        "GenericIPAddressField": {
        "prefix": "GenericIPAddressField",
        "body": "models.GenericIPAddressField(protocol='${1:both}', unpack_ipv4=${2:False}${3:, blank=${4:True}, null=${5:True}})",
        "description": "Django GenericIPAddressField"
        },
        "Null Argument": {
            "prefix": "null",
            "body": "null=${1|True,False|}",
            "description": "Allow NULL values in the database"
        },
        "Blank Argument": {
            "prefix": "blank",
            "body": "blank=${1|True,False|}",
            "description": "Allow the field to be optional in forms"
        },
        "Default Argument": {
            "prefix": "default",
            "body": "default=${1|'default_value',None,datetime.now}",
            "description": "Set a default value for the field"
        },
        "Choices Argument": {
            "prefix": "choices",
            "body": "choices=[('${1:key}', '${2:value}'), ('${3:key2}', '${4:value2}')]",
            "description": "Define a set of choices for the field"
        },
        "Unique Argument": {
            "prefix": "unique",
            "body": "unique=${1|True,False|}",
            "description": "Ensure unique values for the field"
        },
        "Primary Key Argument": {
            "prefix": "primarykey",
            "body": "primary_key=${1|True,False|}",
            "description": "Mark the field as the primary key for the model"
        },
        "DB Index Argument": {
            "prefix": "dbindex",
            "body": "db_index=${1|True,False|}",
            "description": "Create a database index on this field"
        },
        "Editable Argument": {
            "prefix": "editable",
            "body": "editable=${1|True,False|}",
            "description": "Make the field editable in the admin or forms"
        },
        "Help Text Argument": {
            "prefix": "helptext",
            "body": "help_text=${1|'Helpful information about this field'}",
            "description": "Provide additional information about the field"
        },
        "Verbose Name Argument": {
            "prefix": "verbosename",
            "body": "verbose_name=${1|'Human-readable name'}",
            "description": "Specify a human-readable name for the field"
        },
        "On Delete Argument": {
            "prefix": "ondelete",
            "body": "on_delete=models.${1|CASCADE,SET_NULL,PROTECT,SET_DEFAULT,DO_NOTHING|}",
            "description": "Specify behavior when a related object is deleted"
        },
        "Validators Argument": {
            "prefix": "validators",
            "body": "validators=[${1|min_length_validator,max_value_validator}]",
            "description": "Provide custom validation for the field"
        },
        "DB Column Argument": {
            "prefix": "dbcolumn",
            "body": "db_column=${1|'column_name'}",
            "description": "Set the database column name for the field"
        },
        "DB Tablespace Argument": {
            "prefix": "dbtablespace",
            "body": "db_tablespace=${1|'tablespace_name'}",
            "description": "Set the tablespace for the field's index"
        },
        "Auto Created Argument": {
            "prefix": "autocreated",
            "body": "auto_created=${1|True,False|}",
            "description": "Used for fields automatically created by Django"
        },
        "Index Argument": {
            "prefix": "index",
            "body": "index=${1|True,False|}",
            "description": "Mark the field for indexing (Django 3.2+)"
        },
        "Custom Error Messages Argument": {
            "prefix": "errormsg",
            "body": "error_messages={${1|'required': 'This field is required', 'invalid': 'Invalid value'}}",
            "description": "Override default error messages for the field"
        },
        "Unique For Date Argument": {
            "prefix": "uniquefordate",
            "body": "unique_for_date=${1|'date_field'}",
            "description": "Ensure uniqueness with respect to a date field"
        },
        "Unique For Month Argument": {
            "prefix": "uniqueformonth",
            "body": "unique_for_month=${1|'date_field'}",
            "description": "Ensure uniqueness with respect to a month field"
        },
        "Unique For Year Argument": {
            "prefix": "uniqueforyear",
            "body": "unique_for_year=${1|'date_field'}",
            "description": "Ensure uniqueness with respect to a year field"
        },
}